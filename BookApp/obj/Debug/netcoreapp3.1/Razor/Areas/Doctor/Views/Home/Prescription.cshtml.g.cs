#pragma checksum "D:\Project\BookApp\BookApp\Areas\Doctor\Views\Home\Prescription.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "cff7e63cafc1fe271693e79323e1aca600561653"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Areas_Doctor_Views_Home_Prescription), @"mvc.1.0.view", @"/Areas/Doctor/Views/Home/Prescription.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Project\BookApp\BookApp\Areas\Doctor\Views\_ViewImports.cshtml"
using WebApp;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\BookApp\BookApp\Areas\Doctor\Views\_ViewImports.cshtml"
using WebApp.Areas.Admin.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"cff7e63cafc1fe271693e79323e1aca600561653", @"/Areas/Doctor/Views/Home/Prescription.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"936686af5605e9bafa5b30940e0797dea7e9f5a6", @"/Areas/Doctor/Views/_ViewImports.cshtml")]
    public class Areas_Doctor_Views_Home_Prescription : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<Medicine>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/doc_assets/css/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("myForm"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/doc_assets/js/moment.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/assets/js/JsBarcode.code128.min.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/doc_assets/js/jquery-ui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 2 "D:\Project\BookApp\BookApp\Areas\Doctor\Views\Home\Prescription.cshtml"
  
    Layout = "";

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cff7e63cafc1fe271693e79323e1aca6005616536017", async() => {
                WriteLiteral("\r\n    <!-- Favicons -->\r\n    <link href=\"/doc_assets/img/favicon.png\" rel=\"icon\">\r\n\r\n    <!-- Bootstrap CSS -->\r\n    <link rel=\"stylesheet\" href=\"/doc_assets/css/bootstrap.min.css\">\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "cff7e63cafc1fe271693e79323e1aca6005616536478", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <!-- Fontawesome CSS -->
    <link rel=""stylesheet"" href=""/doc_assets/plugins/fontawesome/css/fontawesome.min.css"">
    <link rel=""stylesheet"" href=""/doc_assets/plugins/fontawesome/css/all.min.css"">
    <link rel=""stylesheet"" href=""https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css"">
    <!-- Main CSS -->
    <link rel=""stylesheet"" href=""/doc_assets/css/style.css"">

    <!-- HTML5 shim and Respond.js IE8 support of HTML5 elements and media queries -->
    <!--[if lt IE 9]>
        <script src=""/doc_assets/js/html5shiv.min.js""></script>
        <script src=""/doc_assets/js/respond.min.js""></script>
    <![endif]-->
    <style>
        .btn {
            float: right;
            margin-right: 10px
        }

        .listitem {
            display: flex;
            justify-content: space-between;
        }

        .item {
            flex: 1 1 0;
            width: 150px;
        }

        .invoice-item .invoice-logo img {
            width: ");
                WriteLiteral("auto;\r\n            height: 46px;\r\n        }\r\n\r\n        .invoice-content {\r\n            height: 900px;\r\n        }\r\n\r\n        ");
                WriteLiteral("@page {\r\n            size: auto;\r\n        }\r\n    </style>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cff7e63cafc1fe271693e79323e1aca6005616539678", async() => {
                WriteLiteral(@"

    <!-- Main Wrapper -->
    <div class=""main-wrapper d-print-none"" id=""main"">

        <!-- Header -->
        <!-- /Header -->
        <!-- Breadcrumb -->
        <div class=""breadcrumb-bar"">
            <div class=""container-fluid"">
                <div class=""row align-items-center"">
                    <div class=""col-md-12 col-12"">
                        <nav aria-label=""breadcrumb"" class=""page-breadcrumb"">
                            <ol class=""breadcrumb"">
                                <li class=""breadcrumb-item""><a href=""index-2.html"">Home</a></li>
                                <li class=""breadcrumb-item active"" aria-current=""page"">Add Prescription</li>
                            </ol>
                        </nav>
                        <h2 class=""breadcrumb-title"">Add Prescription</h2>
                    </div>
                </div>
            </div>
        </div>
        <!-- /Breadcrumb -->
        <!-- Page Content -->
        <div class=""content"">
      ");
                WriteLiteral(@"      <div class=""container-fluid"">

                <div class=""row"">
                    <div class=""col-md-5 col-lg-4 col-xl-3 theiaStickySidebar"" id=""patientshow"">

                    </div>

                    <div class=""col-md-7 col-lg-8 col-xl-9"">
                        <div class=""card"">
                            <div class=""card-header"">
                                <h4 class=""card-title mb-0"">Kê toa thuốc</h4>
                            </div>
                            <div class=""card-body"">
                                ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cff7e63cafc1fe271693e79323e1aca60056165311606", async() => {
                    WriteLiteral(@"
                                    <div class=""row"">
                                        <div class=""col-sm-12"">
                                            <div class=""billing-info"">
                                                <span class=""d-block text-muted"">Chẩn đoán</span><input class=""form-control"" type=""text"" id=""diagnose"">
                                            </div>
                                        </div>
                                    </div>
                                    <!-- Add Item -->
                                    <div class=""add-more-item text-right"">
                                        <a href=""javascript:void(0);"" onclick=""addItem();""><i class=""fas fa-plus-circle""></i> Thêm mục</a>
                                    </div>
                                    <!-- /Add Item -->
                                    <!-- Prescription Item -->
                                    <div class=""card card-table"">
                               ");
                    WriteLiteral(@"         <div class=""card-body"">
                                            <div class=""table-responsive"">
                                                <table class=""table table-hover table-center"" id=""myTable"">
                                                    <thead>
                                                        <tr>
                                                            <th style=""width: 100px"">STT</th>
                                                            <th style=""width: 200px"">Tên thuốc</th>
                                                            <th style=""width: 50px"">Số lượng</th>
                                                            <th style=""width: 80px"">Đơn vị tính</th>
                                                            <th style=""width: 110px"">Cách dùng</th>
                                                            <th style=""width: 110px"">Liều dùng</th>
                                                            <th style=""width: 50px""");
                    WriteLiteral(@"></th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id=""tbody"">
                                                        <tr>
                                                            <td>1</td>
                                                            <td><input type=""hidden"" class=""idmedicine"" /><input class=""form-control namemedicine"" type=""text""></td>
                                                            <td><input class=""form-control"" min=""1"" value=""1"" type=""number""></td>
                                                            <td><input class=""form-control"" type=""text""></td>
                                                            <td><input class=""form-control"" type=""text""></td>
                                                            <td><input class=""addrow form-control"" type=""text""></td>
                                                ");
                    WriteLiteral(@"            <td>
                                                                <a href=""#"" tabindex=""-1"" class=""btn bg-danger-light trash"" onclick=""deleteRow(this)""><i class=""far fa-trash-alt""></i></a>
                                                            </td>
                                                        </tr>
                                                    </tbody>
                                                </table>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""row"">
                                        <div class=""col-md-6"">
                                            <div class=""billing-info"">
                                                <span class=""d-block text-muted"">Lời dặn:</span><input class=""form-control"" type=""text"" id=""advice"">
                                            </div>
                               ");
                    WriteLiteral(@"         </div>
                                    </div>
                                    <div class=""row"">
                                        <div class=""col-md-3"">
                                            <div class=""billing-info"">
                                                <span class=""d-block text-muted"">Hẹn tái khám:</span><input class=""form-control"" type=""text"" id=""flapp"">
                                            </div>
                                        </div>
                                    </div>
                                    <a onclick=""InToaThuoc()"" class=""btn bg-primary-light""><i class=""fas fa-print""></i> In toa</a>
                                    <button type=""reset"" onclick=""myFunction()"" class=""btn btn-outline-warning""><i class=""fa fa-refresh fa-spin"" style=""font-size:20px""></i> Làm mới</button>
                                    <a onclick=""addPres()"" class=""btn btn-outline-info submit-btn"">Lưu</a>
                                    <a href");
                    WriteLiteral("=\"/Doctor/Home/PatientProfile\" class=\"btn btn-outline-primary\">Quay lại</a>\r\n                                ");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
                            </div>
                        </div>
                    </div>
                </div>

            </div>

        </div>
        <!-- /Page Content -->
        <!-- Footer -->
        <!-- /Footer -->

    </div>
    <div class=""main-wrapper d-none"" id=""formin""></div>
    <!-- /Main Wrapper -->
    <!-- /Main Wrapper -->
    <!-- jQuery -->
    <script src=""/doc_assets/js/jquery.min.js""></script>
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cff7e63cafc1fe271693e79323e1aca60056165319012", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <!-- Bootstrap Core JS -->
    <script src=""/doc_assets/js/popper.min.js""></script>
    <script src=""/doc_assets/js/bootstrap.min.js""></script>
    <!-- Sticky Sidebar JS -->
    <script src=""/doc_assets/plugins/theia-sticky-sidebar/ResizeSensor.js""></script>
    <script src=""/doc_assets/plugins/theia-sticky-sidebar/theia-sticky-sidebar.js""></script>

    <!-- Custom JS -->
    <script src=""/doc_assets/js/script1.js""></script>
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cff7e63cafc1fe271693e79323e1aca60056165320565", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        var j = jQuery.noConflict();
        var idPres = '';
        var formToPrint = {
            idPres: '',
            advice: '',
            followAppoinment: '',
            diagnose: '',
            medicine: []
        }

        j(document).ready(() => {
            let patient = JSON.parse(localStorage.getItem(""PatientChoosed""));

            document.getElementById('patientshow').innerHTML = ` <div class=""card widget-profile pat-widget-profile"">
                                    <div class=""card-body"">
                                        <div class=""pro-widget-content"">
                                            <div class=""profile-info-widget"">

                                                <div class=""profile-det-info"">
                                                    <h3><a href=""patient-profile.html"">${patient.namePatient}</a></h3>
                                                    <div class=""patient-details"">
                              ");
                WriteLiteral(@"                          <h5><b>Mã bệnh nhân :</b> ${patient.idPatient}</h5>
                                                        <h6 class=""mb-0""><i class=""fas fa-map-marker-alt""></i>${patient.addP}</h6>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div class=""patient-info"">
                                            <ul>
                                                <li>Giới tính <span>${patient.sexP ? ""Nam"" : ""Nữ""}</span></li>
                                                <li>Năm sinh <span>${moment(patient.dob).format('DD/MM/YYYY')}</span></li>
                                            </ul>
                                        </div>
                                    </div>
                                </div>`

        })

        function afterprint() {
          ");
                WriteLiteral(@"  document.getElementById(""formin"").classList.add('d-none');
        }
        window.onafterprint = (e) => {
            afterprint();
        }
       
        function InToaThuoc() {
            let data = JSON.parse(localStorage.getItem('formtoprint'));
            let patient = JSON.parse(localStorage.getItem('PatientChoosed'));
            let d = new Date();
            formin.innerHTML =
                ` <div class=""content"">
                        <div class=""row"">
                            <div class=""col-lg-8 offset-lg-2"">
                                <div class=""invoice-content"">
                                    <div class=""invoice-item"">
                                        <div class=""row p-0 d-flex justify-content-between"">
                                            <div>
                                                <div class=""row invoice-logo d-flex"">
                                                    <img src=""/doc_assets/img/Healthcare.png"" />
         ");
                WriteLiteral(@"                                       <div>
                                                    <h5>SỞ Y TẾ TP.CẦN THƠ</h5>
                                                    <h4>BỆNH VIỆN TẬN TÂM</h4></div>
                                                </div>
                                            </div>
                                            <div>
                                                    <div class=""row format_barcode  d-flex justify-content-end"">
                                                        <svg id=""barcode""></svg>
                                                    </div>
                                                   <div class=""row d-flex justify-content-end"">
                                                        <strong>Mã đơn thuốc:</strong> ${data.idPres}
                                                </div>
                                            </div>
                                        </div>
                                        ");
                WriteLiteral(@"<div class=""row"">
                                            <div class=""col-md-12"" style=""display:flex;justify-content:center;font-size:25px""><b>ĐƠN THUỐC</b></div>
                                        </div>
                                    </div>
                                    <!-- Invoice Item -->
                                    <div class=""invoice-item"">
                                        <div class=""row d-flex justify-content-between"">
                                            <div>
                                                <div class=""invoice-info"">
                                                    <p class=""invoice-details invoice-details-two"">
                                                        Họ tên bệnh nhân: <strong style=""font-size:20px"">${patient.namePatient}</strong> <br>
                                                        Địa chỉ: ${patient.addP}<br>
                                                        Chẩn đoán: ${data.diagnose} <br>
   ");
                WriteLiteral(@"                                                 </p>
                                                </div>
                                            </div>
                                            <div>
                                                <div class=""invoice-info invoice-info2"">
                                                    <p class=""invoice-details"">
                                                        Tuổi: ${d.getFullYear() - patient.dob.substring(0, 4)}<br>
                                                        Giới tính: ${patient.sexP ? ""Nam"" : ""Nữ""}<br>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""invoice-item"">
                                        <div class=""row"">
                                       ");
                WriteLiteral(@"     <div class=""col-md-12"" style=""display:flex;justify-content:center;font-size:25px"">
                                                <b>CHỈ ĐỊNH DÙNG THUỐC</b>
                                            </div>
                                        </div>
                                    </div>
                                    <div class=""invoice-item invoice-table-wrap"" style=""min-height:300px"">
                                        <div class=""row"">
                                            <div class=""col-md-12"">
                                                <div class=""table-responsive"">
                                                    <table class=""invoice-table table table-bordered"" border-none>
                                                        <thead>
                                                            <tr>
                                                                <th class=""text-center"">STT</th>
                                                      ");
                WriteLiteral(@"          <th class=""text-center"">Tên thuốc</th>
                                                                <th class=""text-center"">Cách dùng</th>
                                                                <th class=""text-center"">Liều dùng</th>
                                                                <th class=""text-center"">Số lượng</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody>
                                                               ${formToPrint.medicine.map((item, index) => {
                    return `<tr>
                                                                            <td class=""text-center"">${index + 1}</td>
                                                                            <td class=""text-center"">${item.medicineName}</td>
                                                                           ");
                WriteLiteral(@" <td class=""text-center"">${item.usage}</td>
                                                                            <td class=""text-center"">${item.dosage}</td>
                                                                            <td class=""text-center"">${item.count} ${item.unit}</td>
                                                                        </tr>`
                })}
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <br>
                                    <div class=""invoice-item"">
                                        <div class=""row"">
                                            <div class=""col-md-6"">
                                                <div class=""inv");
                WriteLiteral(@"oice-info"">
                                                    <p class=""invoice-details invoice-details-two"">
                                                        Lời dặn: ${data.advice}<br>
                                                        Hẹn tái khám: ${data.followAppoinment}
                                                        <br>
                                                    </p>
                                                </div>
                                            </div>
                                            <div class=""col-md-6"" style=""position: fixed;padding-right:110px"">
                                                <div class=""invoice-info invoice-info2"">
                                                    <p class=""invoice-details"">
                                                        <i style=""font-size:14px"">Ngày ${d.getDate()} tháng ${d.getMonth()} năm ${d.getFullYear()}</i> <br>
                                                        <stro");
                WriteLiteral(@"ng>Bác sĩ khám bệnh</strong><br><br><br>
                                                        ${patient.nameEmp}
                                                    </p>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                </div>`
            JsBarcode(document.getElementById(""barcode""), patient.idPatient, {
                width: 0.75,
                height: 24,
                fontSize: 18,
                margin: 1,
                textMargin: 0
            })
            document.getElementById('formin').classList.remove('d-none');
            setTimeout(() => {
                print()
            },200)          
        }

        var j = jQuery.noConflict();
        j(document).ready(() => {
            idPres = M");
                WriteLiteral(@"ath.random().toString().substr(2, 8);
            formToPrint.idPres = idPres;
        })
        j(""#main"").on('change', 'input', function () {
            formToPrint.advice = document.getElementById(""advice"").value;
            formToPrint.diagnose = document.getElementById(""diagnose"").value;
            formToPrint.followAppoinment = document.getElementById(""flapp"").value;
            let rows = document.getElementById('tbody').rows;
            formToPrint.medicine = [];
            for (let row of rows) {
                formToPrint.medicine.push({
                    medicineName: row.cells[1].childNodes[1].value,
                    count: row.cells[2].childNodes[0].value,
                    unit: row.cells[3].childNodes[0].value,
                    usage: row.cells[4].childNodes[0].value,
                    dosage: row.cells[5].childNodes[0].value
                })
            }
            console.log(formToPrint);
            localStorage.setItem('formtoprint', JSON.stringify");
                WriteLiteral(@"(formToPrint));
        })
        function addPres() {
            let data = JSON.parse(localStorage.getItem(""PatientChoosed""));
            let objs = [];
            let rows = tbody.rows;
            let obj = {
                idPres: idPres,
                idPKB: data.idPKB,
                idPatient: data.idPatient,
                idEmp: data.idEmp,
                diagnose: document.getElementById(""diagnose"").value,
                advice: document.getElementById(""advice"").value,
                followAppoint: document.getElementById(""flapp"").value
            }
            console.log(obj);
            for (var i = 0; i < rows.length; i++) {
                objs.push({
                    id: '',
                    idPres: idPres,
                    idMedicine: rows[i].cells[1].childNodes[0].value,
                    quantity: parseInt(rows[i].cells[2].childNodes[0].value),
                    dosage: rows[i].cells[3].childNodes[0].value,
                    usage: rows[i");
                WriteLiteral(@"].cells[4].childNodes[0].value,
                    unit: rows[i].cells[5].childNodes[0].value
                })
            }
            console.log(objs);
            j.post(""/doctor/Home/AddPres"", { obj: obj, objs: objs }, (d) => {
                console.log(d);
                if (d != 0) {
                    alert(""thành công!"")
                }
            })
        }
        function myFilter() {
            // Declare variables
            var input, filter, ul, li, a, i, txtValue;
            input = document.getElementById('myInput');
            filter = input.value.toUpperCase();
            ul = document.getElementById(""myUL"");
            li = ul.getElementsByTagName('li');
            for (i = 0; i < li.length; i++) {
                a = li[i].getElementsByTagName(""a"")[0];
                txtValue = a.textContent || a.innerText;
                if (txtValue.toUpperCase().indexOf(filter) > -1) {
                    li[i].style.display = """";
                } else {");
                WriteLiteral(@"
                    li[i].style.display = ""none"";
                }
            }
        }
        function AddRow() {
            j('#tbody').append(`<tr>
                                            <td>1</td>
                                            <td><input type=""hidden"" class=""idmedicine"" /><input class=""form-control namemedicine"" type=""text""></td>
                                            <td><input class=""form-control""  min=""1"" value=""1"" type=""number""></td>
                                            <td><input class=""form-control"" type=""text""></td>
                                            <td><input class=""form-control"" type=""text""></td>
                                            <td><input class=""addrow form-control"" type=""text""></td>
                                            <td>
                                                <a href=""#"" tabindex=""-1"" class=""btn bg-danger-light trash"" onclick=""deleteRow(this)""><i class=""far fa-trash-alt""></i></a>
                        ");
                WriteLiteral(@"                    </td>
                                        </tr>`)
            numberOrder()
        }
        function addItem() {
            AddRow()
        }
        // thêm dòng mới khi nhấn tab hoặc nhấn enter
        j('table').on('keydown', '.addrow', function (e) {
            if ((e.keyCode == 9 || e.keyCode == 13) && j(this).closest(""tr"").is("":last-child"")) {
                AddRow()
            } else {
                return;
            }
        });
        function deleteRow(a) {
            a.parentElement.parentElement.remove();
        }
        function myFunction() {
            document.getElementById(""myForm"").reset();
        }
        function numberOrder() {
            for (var i = tbody.rows.length - 1; i >= 0; i--) {
                tbody.rows[i].cells[0].innerText = (i + 1);
            }
        }

    </script>
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "cff7e63cafc1fe271693e79323e1aca60056165338661", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"
    <script>
        var j = jQuery.noConflict();
        j.ui.autocomplete.prototype._renderMenu = function (ul, items) {
            var self = this;
            // ul.append(""<li class='ui-autocomplete-category' aria-label='header'><div class='listFullName listHeader'>Tên thuốc</div><div class='listEmployeeID listHeader'>hoạt chất</div><div class='listJobTitle listHeader'>Id</div></li>"");
            j.each(items, function (index, item) {
                self._renderItemData(ul, item);
            });
        };

        j.ui.autocomplete.prototype._renderItem = function (table, item) {
            return j(""<li class='listitem'>"")
                .data(""item.autocomplete"", item)
                .append(""<div class='item'>"" + item.value + ""</div>"" + ""<div class='item'>"" + item.label + ""</div>"" + ""<div class='item'>"" + item.meGroupName + ""</div>"")
                .appendTo(table);
        };
        j(tbody).on('focus', '.namemedicine', function () {
            j(this).autocomplete({
  ");
                WriteLiteral(@"              source: '/doctor/home/SearchMedicine',
                minlength: 1,
                select: function (e, d) {
                    console.log(d.item);
                    this.previousElementSibling.value = d.item.id;
                }
            })
        })
    </script>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n\r\n<!-- doccure/add-prescription.html  30 Nov 2019 04:12:37 GMT -->\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Medicine> Html { get; private set; }
    }
}
#pragma warning restore 1591
